name: CI

on:
  push:
  pull_request_target:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/bazel
          key: bazel-${{ hashFiles('.bazelversion') }}

      - name: Mount cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            cargo/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('cargo/**/Cargo.lock') }}

      - name: Mount tools
        uses: actions/cache@v2
        with:
          path: |
            tools/bin/
            tools/.crates.toml
            tools/.crates2.json
          key: ${{ runner.os }}-tools-${{ hashFiles('tools/scripts/bootstrap.sh') }}

      - name: Bootstrap
        run: ./tools/scripts/bootstrap.sh

      - name: Build/Test
        run: ./tools/ci/ci-test.sh

      - name: Upload test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: ./bazel-testlogs/**/test.xml
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

      - name: Upload godot
        uses: actions/upload-artifact@v2
        with:
          name: godot
          path: ./bazel-bin/src/cmd/godot/godot-debian.deb
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

  publish-test-results:
    name: "Publish Test Results"
    needs: build
    runs-on: ubuntu-latest
    # the build-and-test job might be skipped, we don't need to run this job then
    if: >
      success() || failure() && (
        github.event_name == 'push' ||
        github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name != github.repository
      )

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: test-results

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.3
        with:
          check_name: Test Results
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: test-results/**/*.xml
